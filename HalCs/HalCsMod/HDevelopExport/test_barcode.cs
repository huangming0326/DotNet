//
// File generated by HDevelop for HALCON/.NET (C#) Version 18.11.1.1
// Non-ASCII strings in this file are encoded in UTF-8.
// 
// Please note that non-ASCII characters in string constants are exported
// as octal codes in order to guarantee that the strings are correctly
// created on all systems, independent on any compiler settings.
// 
// Source files with different encoding should not be mixed in one project.
//
//  This file is intended to be used with the HDevelopTemplate or
//  HDevelopTemplateWPF projects located under %HALCONEXAMPLES%\c#

using System;
using HalconDotNet;

public partial class HDevelopExport
{
  public HTuple hv_ExpDefaultWinHandle;

  // Procedures 
  public void test_barcode (HObject ho_Image, HTuple hv_WindowHandle)
  {




    // Local iconic variables 

    HObject ho_SymbolRegions=null;

    // Local control variables 

    HTuple hv_BarCodeHandle = new HTuple(), hv_DecodedDataStrings = new HTuple();
    HTuple hv_BarcodeLocation = new HTuple(), hv_Exception = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_SymbolRegions);
    try
    {

      //* Init Barcode这行代码放到初始化位置,函数最上边,打开相机之前

      HOperatorSet.SetCurrentDir("C:/Users/iwake/OneDrive - wake/Desktop/HalconPractise/HalconProj/Barcode");
      hv_BarCodeHandle.Dispose();
      HOperatorSet.ReadBarCodeModel("BarCodeHandle.bcm", out hv_BarCodeHandle);
      //set_bar_code_param (BarCodeHandle, 'check_char', 'present')
      HOperatorSet.SetBarCodeParam(hv_BarCodeHandle, "quiet_zone", 1);

      //* Recognition Barcode这行代码什么时候想识别二维码放到那里,输入Image,BarCodeHandle, WindowHandle,
      //*输出SymbolRegions,DecodedDataStrings, BarcodeLocation
      try
      {
        ho_SymbolRegions.Dispose();hv_DecodedDataStrings.Dispose();hv_BarcodeLocation.Dispose();
        image_get_bar(ho_Image, out ho_SymbolRegions, hv_BarCodeHandle, hv_WindowHandle, 
            out hv_DecodedDataStrings, out hv_BarcodeLocation);
      }
      // catch (Exception) 
      catch (HalconException HDevExpDefaultException1)
      {
        HDevExpDefaultException1.ToHTuple(out hv_Exception);
      }



      ho_SymbolRegions.Dispose();

      hv_BarCodeHandle.Dispose();
      hv_DecodedDataStrings.Dispose();
      hv_BarcodeLocation.Dispose();
      hv_Exception.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_SymbolRegions.Dispose();

      hv_BarCodeHandle.Dispose();
      hv_DecodedDataStrings.Dispose();
      hv_BarcodeLocation.Dispose();
      hv_Exception.Dispose();

      throw HDevExpDefaultException;
    }
  }


}

