using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using HalconDotNet;

namespace HalCsConsole
{
    class Program
    {
        static void Main(string[] args)
        {
            //Test CsConsole
            Console.WriteLine("Test CsConsole");

            // Test HalCs
            TestHalCs();

            // Test HalCs Live
            TestHalCsLive();

            Console.ReadKey(true);
        }
        static void TestHalCs()
        {
            HTuple hv_a = new HTuple(), hv_b = new HTuple();
            HTuple hv_c = new HTuple();
            // Initialize local and output iconic variables 
            hv_a.Dispose();
            hv_a = 1;
            hv_b.Dispose();
            hv_b = 2;
            hv_c.Dispose();
            using (HDevDisposeHelper dh = new HDevDisposeHelper())
            {
                hv_c = hv_a + hv_b;
            }

            Console.WriteLine(hv_a.I);
            Console.WriteLine(hv_b.I);
            Console.WriteLine(hv_c.I);

            hv_a.Dispose();
            hv_b.Dispose();
            hv_c.Dispose();
        }
        static void TestHalCsLive()
        {


            // Local iconic variables 

            HObject ho_Image = null;

            // Local control variables 

            HTuple hv_AcqHandle = new HTuple(), hv_Mean = new HTuple();
            HTuple hv_Deviation = new HTuple();
            // Initialize local and output iconic variables 
            HOperatorSet.GenEmptyObj(out ho_Image);
            //Image Acquisition 02: Code generated by Image Acquisition 02
            hv_AcqHandle.Dispose();
            HOperatorSet.OpenFramegrabber("GigEVision2", 0, 0, 0, 0, 0, 0, "progressive",
                -1, "default", -1, "false", "default", "c42f90f2b7fa_Hikvision_MVCE12010GM",
                0, -1, out hv_AcqHandle);
            HOperatorSet.GrabImageStart(hv_AcqHandle, -1);
            while ((int)(1) != 0)
            {
                ho_Image.Dispose();
                HOperatorSet.GrabImageAsync(out ho_Image, hv_AcqHandle, -1);
                //Image Acquisition 02: Do something
                hv_Mean.Dispose(); hv_Deviation.Dispose();
                HOperatorSet.Intensity(ho_Image, ho_Image, out hv_Mean, out hv_Deviation);
                Console.WriteLine(hv_Mean.D);
            }
            HOperatorSet.CloseFramegrabber(hv_AcqHandle);

            ho_Image.Dispose();

            hv_AcqHandle.Dispose();
            hv_Mean.Dispose();
            hv_Deviation.Dispose();
        }
    }
}
